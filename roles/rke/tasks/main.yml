---
- name: Adiciona usuario para administrar cluster
  user:
    name: admincluster
    comment: Admin k8s

#- name: Define senha do usuario (Tem que ser um hash e preciso usar o python para gerar o Hash)
#  user:
#    name: admincluster
#    comment: "Admin k8s"
#    password: $6$INxDHuVqvGzKOB90$f2CjwN4jDwq1OLspYU2jhuY34aTOzvlWpejEftggwhaIG7hHgIc/ze.ohF3tu4Rxj77EmK9eo0CgurHrBZqTy0

#- name: Adiciona usuario sudoers
#  copy:
#    dest: "/etc/sudoers.d/admincluster"
#    content: |
#      admincluster ALL=(ALL:ALL) NOPASSWD: ALL
#  when: inventory_hostname != "admin"


- name: Atualiza SO de todos os Nodes
  yum:
    name: '*'
    state: latest
  tags:
  - update

- name: Instalar Pacote Chrony NTP
  yum: 
    name: "{{ packages }}"
    state: latest
  
- name: Adiciona as linhas dos enderecos de ntp
  command: sed -i -e '3 iserver 0.pool.ntp.org iburst' -e '3 iserver 1.pool.ntp.org iburst' /etc/chrony.conf


- name: Realiza Sincronia de Horas Force
  command: chronyc -a makestep


- name: Realiza Sincronia de Horas
  command: timedatectl set-ntp 1


- name: Inicia serviço no boot
  systemd:
    name: chronyd
    enabled: yes
    masked: no

- name: Reinicia serviço do chronyd
  systemd:
    state: restarted
    daemon_reload: yes
    name: chronyd

- name: Adiciona Entrada no arquivo hosts
  blockinfile:
    dest: /etc/hosts
    block: |
      192.168.1.19 RKE-BASTION.HOMELAB.LOCAL 
      192.168.1.20 RKE-MASTER0.HOMELAB.LOCAL
      192.168.1.21 RKE-WORKER0.HOMELAB.LOCAL
      192.168.1.22 RKE-WORKER1.HOMELAB.LOCAL


- name: Cria arquivo de Kernel
  copy:
    dest: "/etc/sysctl.d/k8s.conf"
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
  when: inventory_hostname != "admin"
  


#- name: Adiciona entrada de kernel 
#  blockinfile:
#    dest: /etc/sysctl.d/k8s.conf
#    block: |
#      net.bridge.bridge-nf-call-ip6tables = 1
#      net.bridge.bridge-nf-call-iptables = 1


- name: Parametrização de SO para o K8s
  command: "{{ item }}"
  with_items:
    - sed -i.bak -r 's/(.+ swap .+)/#\1/' /etc/fstab
    - sed -i.bak -r 's/(.+ swap .+)/#\1/' /etc/fstab
    - swapoff -a
    - touch /etc/sudoers.d/admincluster
    - sysctl --system
  when: inventory_hostname != "admin"



- name: Cria chave ssh do admin do cluster (adminclsuter)
  user:
    name: admincluster
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa


- name: Instalando Docker
  shell: curl https://releases.rancher.com/install-docker/18.09.sh | sh
  when: inventory_hostname != "admin"

- name: Adiciona Usuario admincluster ao grupo docker
  user:
    name: admincluster
    shell: /bin/bash
    groups: docker
    append: yes


- name: Adiciona Usuario admincluster ao grupo wheel
  user:
    name: admincluster
    shell: /bin/bash
    groups: wheel
    append: yes


- name: Baixando o rke para subir o cluster
  command: "{{ item }}"
  with_items:
    - wget -O rke https://github.com/rancher/rke/releases/download/v0.0.8-dev/rke_linux-amd64
    -  chmod +x /usr/local/bin/rke
  when: inventory_hostname == "admin" 

- name: Cria o cluster
  shell: /usr/local/bin/rke rke up --config ./rancher-cluster.yml
  when: inventory_hostname == "admin"


- name: Variavel de acesso ao cluster
  command: "{{ item }}"
  with_items:
    - export KUBECONFIG=/home/admincluster/kube_config_cluster.yml
    - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - ./get_helm.sh --version v3.3.1
    - chmod 700 get_helm.sh
    - ./get_helm.sh
  when: inventory_hostname == "admin"


